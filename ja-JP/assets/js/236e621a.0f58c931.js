"use strict";(self.webpackChunkkirbee_website=self.webpackChunkkirbee_website||[]).push([[5635],{7165:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"AWS/Compute Service/Container/ECS","title":"ECS","description":"ECS","source":"@site/docs/AWS/Compute Service/Container/ECS.md","sourceDirName":"AWS/Compute Service/Container","slug":"/AWS/Compute Service/Container/ECS","permalink":"/kirbeee/ja-JP/docs/AWS/Compute Service/Container/ECS","draft":false,"unlisted":false,"editUrl":"https://github.com/kirbeee/kirbeee/docs/AWS/Compute Service/Container/ECS.md","tags":[],"version":"current","lastUpdatedBy":"kirbeee","lastUpdatedAt":1744362513000,"frontMatter":{"title":"ECS"},"sidebar":"docs","previous":{"title":"ECR (Elastic Container Registry)","permalink":"/kirbeee/ja-JP/docs/AWS/Compute Service/Container/ECR"},"next":{"title":"EKS (Elastic Kubernetes Service)","permalink":"/kirbeee/ja-JP/docs/AWS/Compute Service/Container/EKS"}}');var t=i(74848),a=i(28453);const c={title:"ECS"},r="ECS (Elastic Container Service)",l={},o=[{value:"Launch Types",id:"launch-types",level:2},{value:"EC2 Launch Type",id:"ec2-launch-type",level:3},{value:"Fargate Launch Type",id:"fargate-launch-type",level:3},{value:"IAM Roles for ECS",id:"iam-roles-for-ecs",level:2},{value:"Load Balancing Integration",id:"load-balancing-integration",level:2},{value:"Data Volumes",id:"data-volumes",level:2},{value:"ECS Service Auto Scaling",id:"ecs-service-auto-scaling",level:2},{value:"EC2 Launch Type \u2013 Auto Scaling EC2 Instances",id:"ec2-launch-type--auto-scaling-ec2-instances",level:3},{value:"ECS tasks invoked by Event Bridge",id:"ecs-tasks-invoked-by-event-bridge",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ecs-elastic-container-service",children:"ECS (Elastic Container Service)"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"ECS",src:i(79281).A+"",width:"1794",height:"1890"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ECS = Elastic Container Service"}),"\n",(0,t.jsx)(n.li,{children:"Launch Docker containers on AWS"}),"\n",(0,t.jsx)(n.li,{children:"You must provision & maintain the infrastructure (the EC2 instances)"}),"\n",(0,t.jsx)(n.li,{children:"AWS takes care of starting / stopping containers"}),"\n",(0,t.jsx)(n.li,{children:"Has integrations with the Application Load Balancer"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"launch-types",children:"Launch Types"}),"\n",(0,t.jsx)(n.h3,{id:"ec2-launch-type",children:"EC2 Launch Type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img.png",src:i(1137).A+"",width:"636",height:"635"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Launch Docker containers on AWS = Launch ECS Tasks on ECS Clusters"}),"\n",(0,t.jsx)(n.li,{children:"EC2 Launch Type: you must provision & maintain the infrastructure (the EC2 instances)"}),"\n",(0,t.jsx)(n.li,{children:"Each EC2 Instance must run the ECS Agent to register in the ECS Cluster"}),"\n",(0,t.jsx)(n.li,{children:"AWS takes care of starting / stopping containers"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"fargate-launch-type",children:"Fargate Launch Type"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img.png",src:i(28374).A+"",width:"517",height:"507"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Launch Docker containers on AWS"}),"\n",(0,t.jsx)(n.li,{children:"You do not provision the infrastructure(no EC2 instances to manage)"}),"\n",(0,t.jsx)(n.li,{children:"It\u2019s all Serverless!"}),"\n",(0,t.jsx)(n.li,{children:"You just create task definitions"}),"\n",(0,t.jsx)(n.li,{children:"AWS just runs ECS Tasks for you based on the CPU / RAM you need"}),"\n",(0,t.jsx)(n.li,{children:"To scale, just increase the number of tasks. Simple - no more EC2 instances"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"iam-roles-for-ecs",children:"IAM Roles for ECS"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["EC2 Instance Profile (EC2 Launch Type only):","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Used by the ECS agent"}),"\n",(0,t.jsx)(n.li,{children:"Makes API calls to ECS service"}),"\n",(0,t.jsx)(n.li,{children:"Send container logs to CloudWatch Logs"}),"\n",(0,t.jsx)(n.li,{children:"Pull Docker image from ECR"}),"\n",(0,t.jsx)(n.li,{children:"Reference sensitive data in Secrets Manager or SSM Parameter Store"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["ECS Task Role:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allows each task to have a specific role"}),"\n",(0,t.jsx)(n.li,{children:"Use different roles for the different ECS Services you run"}),"\n",(0,t.jsxs)(n.li,{children:["Task Role is defined in the task definition\n",(0,t.jsx)(n.img,{alt:"img.png",src:i(36813).A+"",width:"574",height:"562"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"load-balancing-integration",children:"Load Balancing Integration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Application Load Balancer supported and works for most use cases"}),"\n",(0,t.jsx)(n.li,{children:"Network Load Balancer recommended only for high throughput / high performance use cases, or to pair it with AWS Private Link"}),"\n",(0,t.jsxs)(n.li,{children:["Classic Load Balancer supported but not recommended (no advanced features - no Fargate)\n",(0,t.jsx)(n.img,{alt:"img.png",src:i(80285).A+"",width:"667",height:"602"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"data-volumes",children:"Data Volumes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Mount EFS file systems onto ECS tasks"}),"\n",(0,t.jsx)(n.li,{children:"Works for both EC2 and Fargate launch types"}),"\n",(0,t.jsx)(n.li,{children:"Tasks running in any AZ will share the same data in the EFS file system"}),"\n",(0,t.jsx)(n.li,{children:"Fargate + EFS = Serverless"}),"\n",(0,t.jsx)(n.li,{children:"Use cases: persistent multi-AZ shared storage for your containers"}),"\n",(0,t.jsx)(n.li,{children:"Note:"}),"\n",(0,t.jsxs)(n.li,{children:["Amazon S3 cannot be mounted as a file system\n",(0,t.jsx)(n.img,{alt:"img.png",src:i(44018).A+"",width:"506",height:"655"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ecs-service-auto-scaling",children:"ECS Service Auto Scaling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automatically increase/decrease the desired number of ECS tasks"}),"\n",(0,t.jsxs)(n.li,{children:["Amazon ECS Auto Scaling uses AWS Application Auto Scaling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ECS Service Average CPU Utilization"}),"\n",(0,t.jsx)(n.li,{children:"ECS Service Average Memory Utilization - Scale on RAM"}),"\n",(0,t.jsx)(n.li,{children:"ALB Request Count Per Target \u2013 metric coming from the ALB"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Target Tracking \u2013 scale based on target value for a specific CloudWatch metric"}),"\n",(0,t.jsx)(n.li,{children:"Step Scaling \u2013 scale based on a specified CloudWatch Alarm"}),"\n",(0,t.jsx)(n.li,{children:"Scheduled Scaling \u2013 scale based on a specified date/time (predictable changes)"}),"\n",(0,t.jsx)(n.li,{children:"ECS Service Auto Scaling (task level) \u2260 EC2 Auto Scaling (EC2 instance level)"}),"\n",(0,t.jsx)(n.li,{children:"Fargate Auto Scaling is much easier to setup (because Serverless)"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"ec2-launch-type--auto-scaling-ec2-instances",children:"EC2 Launch Type \u2013 Auto Scaling EC2 Instances"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Accommodate ECS Service Scaling by adding underlying EC2 Instances"}),"\n",(0,t.jsxs)(n.li,{children:["Auto Scaling Group Scaling","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Scale your ASG based on CPU Utilization"}),"\n",(0,t.jsx)(n.li,{children:"Add EC2 instances over time"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["ECS Cluster Capacity Provider","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Used to automatically provision and scale the infrastructure for your ECS Tasks"}),"\n",(0,t.jsx)(n.li,{children:"Capacity Provider paired with an Auto Scaling Group"}),"\n",(0,t.jsxs)(n.li,{children:["Add EC2 Instances when you\u2019re missing capacity (CPU, RAM\u2026)\n",(0,t.jsx)(n.img,{alt:"img.png",src:i(41900).A+"",width:"1314",height:"614"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ecs-tasks-invoked-by-event-bridge",children:"ECS tasks invoked by Event Bridge"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"img.png",src:i(50066).A+"",width:"1200",height:"586"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},80285:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ALB-ECS-ee967388c6f1aeb2beb6fe9d1d5104c7.png"},41900:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ASG-EC2-ec19fcf07c63aca487811debd53d739c.png"},1137:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/EC2-launch-type-0720079cab0343044eec79f86ce2934a.png"},50066:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ECS-event-bridge-abf1c6be674a95868ba703d8f4873801.png"},79281:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/ECS-019da9c5cf636cf5d393eae4c29aca24.png"},44018:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/EFS-ECS-b9bbf307bde15d98ae7ea47f7b03ece9.png"},28374:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/Fargate-lunch-type-81b6671dea22fdfe359c9f5c8f1b94b4.png"},36813:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/IAM-ECS-054084f41c6473734de149c1a888e341.png"},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var s=i(96540);const t={},a=s.createContext(t);function c(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);