"use strict";(self.webpackChunkkirbee_website=self.webpackChunkkirbee_website||[]).push([[8216],{39003:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"AWS/iam","title":"IAM","description":"Structure: Role, Group, User","source":"@site/docs/AWS/IAM.md","sourceDirName":"AWS","slug":"/aws/iam","permalink":"/kirbeee/docs/aws/iam","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"iam","title":"IAM","slug":"/aws/iam"},"sidebar":"docs","previous":{"title":"Outpost","permalink":"/kirbeee/docs/AWS/Global Infrastruture/outpost"},"next":{"title":"Comprehend","permalink":"/kirbeee/docs/AWS/Machine Learning/Comprehend"}}');var r=s(74848),l=s(28453);const o={id:"iam",title:"IAM",slug:"/aws/iam"},c="IAM (identity and access management)",t={},a=[{value:"Permissions",id:"permissions",level:2},{value:"File Structure",id:"file-structure",level:2},{value:"Password Policies",id:"password-policies",level:2},{value:"MFA (Multi-Factor Authentication)",id:"mfa-multi-factor-authentication",level:2},{value:"How can users access AWS?",id:"how-can-users-access-aws",level:2},{value:"Roles",id:"roles",level:2},{value:"Security Tool",id:"security-tool",level:2},{value:"Share IAM Responsibilities",id:"share-iam-responsibilities",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"iam-identity-and-access-management",children:"IAM (identity and access management)"})}),"\n",(0,r.jsx)(n.p,{children:"Structure: Role, Group, User"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Global service"}),"\n",(0,r.jsx)(n.li,{children:"Root account created by default, shouldn't be used or shared"}),"\n",(0,r.jsx)(n.li,{children:"Users are people within your organization, and can be grouped"}),"\n",(0,r.jsx)(n.li,{children:"Groups only contain users, not other groups"}),"\n",(0,r.jsx)(n.li,{children:"Users don't have to belong to a group, and user can belong to multiple"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"permissions",children:"Permissions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Users or Groups can be assigned JSON documents called policies"}),"\n",(0,r.jsx)(n.li,{children:"These policies define the permissions of the users"}),"\n",(0,r.jsx)(n.li,{children:"In AWS you apply the least privilege principle: don't give more permissions than a user needs"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"file-structure",children:"File Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Consists of:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Version: policy language version, always include "20 12-10-17"'}),"\n",(0,r.jsx)(n.li,{children:"Id: an identifier for the policy (optional)"}),"\n",(0,r.jsx)(n.li,{children:"Statement: one or more individual statements (required)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Statements consists of","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Sid: an identifier for the statement (optional)"}),"\n",(0,r.jsx)(n.li,{children:"Effect: whether the statement allows or denies access(Allow, Deny)"}),"\n",(0,r.jsx)(n.li,{children:"Principal: account/user/role to which this policy applied to"}),"\n",(0,r.jsx)(n.li,{children:"Action: list of actions this policy allows or denies"}),"\n",(0,r.jsx)(n.li,{children:"Resource: list of resources to which the actions applied to"}),"\n",(0,r.jsx)(n.li,{children:"Condition: conditions for when this policy is in effect (optional)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "Version": "2012-10-17",\n    "id": "iam",\n    "Statement": [\n        {\n            "Sid": "1",\n            "Effect": "Allow",\n            "Principal": {\n                "AWS": "arn:aws:iam::123456789012:root"\n            },\n            "Action": "s3:*",\n            "Resource": "*"\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"password-policies",children:"Password Policies"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Strong passwords = higher security for your account"}),"\n",(0,r.jsxs)(n.li,{children:["In AWS, you can setup a password policy:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Set a minimum password length"}),"\n",(0,r.jsxs)(n.li,{children:["Require specific character types:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"including uppercase letters"}),"\n",(0,r.jsx)(n.li,{children:"lowercase letters"}),"\n",(0,r.jsx)(n.li,{children:"numbers"}),"\n",(0,r.jsx)(n.li,{children:"non-alphanumeric characters"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Allow all IAM users to change their own passwords"}),"\n",(0,r.jsx)(n.li,{children:"Require users to change their password after some time (password expiration)"}),"\n",(0,r.jsx)(n.li,{children:"Prevent password re-use"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"mfa-multi-factor-authentication",children:"MFA (Multi-Factor Authentication)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Users have access to your account and can possibly change configurations or delete resources in your AWS account"}),"\n",(0,r.jsx)(n.li,{children:"You want to protect your Root Accounts and IAM users"}),"\n",(0,r.jsx)(n.li,{children:"MFA = password you know + security device you own"}),"\n",(0,r.jsxs)(n.li,{children:["MFA can be:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Virtual MFA device"}),"\n",(0,r.jsx)(n.li,{children:"Universal 2nd Factor (U2F) Security Key"}),"\n",(0,r.jsx)(n.li,{children:"Hardware Key Fob MFA Device"}),"\n",(0,r.jsx)(n.li,{children:"Hardware Key Fob MFA Device for AWS GovCloud (US)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-can-users-access-aws",children:"How can users access AWS?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["To access AWS, you have three options:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"AWS Management Console (protected by password + MFA)"}),"\n",(0,r.jsx)(n.li,{children:"AWS Command Line Interface (CLI): protected by access keys"}),"\n",(0,r.jsx)(n.li,{children:"AWS Software Developer Kit (SDK) - for code: protected by access"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"roles",children:"Roles"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Some AWS service will need to perform actions on your behalf"}),"\n",(0,r.jsx)(n.li,{children:"To do so, we will assign permissions to AWS services with IAM Roles"}),"\n",(0,r.jsxs)(n.li,{children:["Common roles:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"EC2 Instance Roles"}),"\n",(0,r.jsx)(n.li,{children:"Lambda Function Roles"}),"\n",(0,r.jsx)(n.li,{children:"Roles for CloudFormation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-tool",children:"Security Tool"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"IAM Credentials Report\na report that lists all your account's users and the status of their various credentials"}),"\n",(0,r.jsx)(n.li,{children:"IAM Access Advisor\nAccess advisor shows the service permissions granted to a user and when those services were last accessed.\nYou can use this information to revise your policies."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"share-iam-responsibilities",children:"Share IAM Responsibilities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"AWS is responsible for:"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Infrastructure (global network security)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Configuration and vulnerability analysis"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Compliance validation"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"You are responsible for:"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Users, Groups, Roles, Policies management and monitoring"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Enable MFA on all accounts"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Rotate all your keys often"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Use IAM tools to apply appropriate permissions"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Analyze access patterns & review permissions"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Users: mapped to a physical user, has a password for AWS Console"}),"\n",(0,r.jsx)(n.li,{children:"Groups: contains users only"}),"\n",(0,r.jsx)(n.li,{children:"Policies: JSON document that outlines permissions for users or groups"}),"\n",(0,r.jsx)(n.li,{children:"Roles: for EC2 instances or AWS services"}),"\n",(0,r.jsx)(n.li,{children:"Security: MFA + Password Policy"}),"\n",(0,r.jsx)(n.li,{children:"AWS CLI: manage your AWS services using the command-line"}),"\n",(0,r.jsx)(n.li,{children:"AWS SDK: manage your AWS services using a programming language"}),"\n",(0,r.jsx)(n.li,{children:"Access Keys: access AWS using the CLI or SDK"}),"\n",(0,r.jsx)(n.li,{children:"Audit: IAM Credential Reports & IAM Access Advisor"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(96540);const r={},l=i.createContext(r);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);