"use strict";(self.webpackChunkkirbee_website=self.webpackChunkkirbee_website||[]).push([[8705],{55804:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"AWS/Advance Identity/Organization","title":"Organizations","description":"- Global service","source":"@site/docs/AWS/Advance Identity/Organization.md","sourceDirName":"AWS/Advance Identity","slug":"/AWS/Advance Identity/Organization","permalink":"/zh-TW/docs/AWS/Advance Identity/Organization","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Organizations"},"sidebar":"docs","previous":{"title":"AWS control tower","permalink":"/zh-TW/docs/AWS/Advance Identity/Control-Tower"},"next":{"title":"Pricing Model","permalink":"/zh-TW/docs/AWS/Advance Identity/Pricing-Model"}}');var s=i(74848),l=i(28453);const c={title:"Organizations"},r="Organizations",o={},a=[];function d(e){const n={h1:"h1",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"organizations",children:"Organizations"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Global service"}),"\n",(0,s.jsx)(n.li,{children:"Allows to manage multiple AWS accounts"}),"\n",(0,s.jsx)(n.li,{children:"The main account is the master account"}),"\n",(0,s.jsxs)(n.li,{children:["Cost Benefits:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Consolidated Billing across all accounts - single payment method"}),"\n",(0,s.jsx)(n.li,{children:"Pricing benefits from aggregated usage (volume discount for EC2, S3...)"}),"\n",(0,s.jsx)(n.li,{children:"Pooling of Reserved EC2 instances for optimal savings"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"API is available to automate AWS account creation"}),"\n",(0,s.jsx)(n.li,{children:"Restrict account privileges using Service Control Policies (SCP)"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"multi-account-strategy",children:"Multi-Account Strategy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Create accounts per department, per cost center, per dev / test / prod, based on regulatory restrictions (using SCP), for better resource isolation (ex",":VPC","), to have separate per-account service limits, isolated account for logging"]}),"\n",(0,s.jsx)(n.li,{children:"Multi Account vs One Account Multi VPC"}),"\n",(0,s.jsx)(n.li,{children:"Use tagging standards for billing purposes"}),"\n",(0,s.jsx)(n.li,{children:"Enable CloudTrail on all accounts, send logs to central S3 account"}),"\n",(0,s.jsx)(n.li,{children:"Send CloudWatch Logs to central logging account"}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"organizational-units-ou---example",children:"Organizational Units (OU) - Example"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"OU",src:i(95894).A+"",width:"1329",height:"422"})}),"\n",(0,s.jsx)(n.h1,{id:"aws-organizations",children:"AWS Organizations"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Organizations",src:i(65859).A+"",width:"943",height:"594"})}),"\n",(0,s.jsx)(n.h1,{id:"service-control-policies-scp",children:"Service Control Policies (SCP)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Whitelist or blacklist IAM actions"}),"\n",(0,s.jsx)(n.li,{children:"Applied at the OU or Account level"}),"\n",(0,s.jsx)(n.li,{children:"Does not apply to the Master Account"}),"\n",(0,s.jsx)(n.li,{children:"SCP is applied to all the Users and Roles of the Account, including Root"}),"\n",(0,s.jsx)(n.li,{children:"The SCP does not affect service-linked roles"}),"\n",(0,s.jsxs)(n.li,{children:["Service-linked roles enable other AWS services to integrate with AWS Organizations and can't be restricted by SCPs.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SCP must have an explicit Allow (does not allow anything by default)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use cases:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Restrict access to certain services (for example: can't use EMR)"}),"\n",(0,s.jsx)(n.li,{children:"Enforce PCI compliance by explicitly disabling services"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},95894:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/OU-b7de7b6d5683474103c4ca3e2214146f.png"},65859:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/Organization-da72cfa7b49dee3a241e43e30bc2617b.png"},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(96540);const s={},l=t.createContext(s);function c(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);