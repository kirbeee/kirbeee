"use strict";(self.webpackChunkkirbee_website=self.webpackChunkkirbee_website||[]).push([[3486],{753:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"AWS/ELB & ASG/ASG","title":"Auto Scaling Group (ASG)","description":"Auto Scaling Group","source":"@site/docs/AWS/ELB & ASG/ASG.mdx","sourceDirName":"AWS/ELB & ASG","slug":"/AWS/ELB & ASG/ASG","permalink":"/kirbeee/zh-TW/docs/AWS/ELB & ASG/ASG","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Auto Scaling Group (ASG)","author":"Kirbee"},"sidebar":"docs","previous":{"title":"Instance Store","permalink":"/kirbeee/zh-TW/docs/AWS/EC2/Instance-Store"},"next":{"title":"ELB (Elastic Load Balancer)","permalink":"/kirbeee/zh-TW/docs/AWS/ELB & ASG/ELB"}}');var t=i(4848),l=i(8453);const s={title:"Auto Scaling Group (ASG)",author:"Kirbee"},c="Introduction to Auto Scaling Group (ASG)",r={},o=[{value:"Auto Scaling Groups - Scaling Strategies",id:"auto-scaling-groups---scaling-strategies",level:2},{value:"Dynamic Scaling: Respond to changing demand",id:"dynamic-scaling-respond-to-changing-demand",level:2},{value:"Scheduled Scaling",id:"scheduled-scaling",level:2},{value:"Predictive Scaling",id:"predictive-scaling",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Auto Scaling Group",src:i(7233).A+"",width:"3406",height:"1528"})}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction-to-auto-scaling-group-asg",children:"Introduction to Auto Scaling Group (ASG)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"In real-life, the load on your websites and application can change"}),"\n",(0,t.jsx)(n.li,{children:"In the cloud, you can create and get rid of servers very quickly"}),"\n",(0,t.jsx)(n.li,{children:"The goal of an Auto Scaling Group (ASG) is to:"}),"\n",(0,t.jsx)(n.li,{children:"Scale out (add EC2 instances) to match an increased load"}),"\n",(0,t.jsx)(n.li,{children:"Scale in (remove EC2 instances) to match a decreased load"}),"\n",(0,t.jsx)(n.li,{children:"Ensure we have a minimum and a maximum number of machines running"}),"\n",(0,t.jsx)(n.li,{children:"Automatically register new instances to a load balancer"}),"\n",(0,t.jsx)(n.li,{children:"Replace unhealthy instances"}),"\n",(0,t.jsx)(n.li,{children:"Cost Savings: only run at an optimal capacity (principle of the cloud)"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"scaling-strategies",children:"Scaling Strategies"}),"\n",(0,t.jsx)(n.h2,{id:"auto-scaling-groups---scaling-strategies",children:"Auto Scaling Groups - Scaling Strategies"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Manual Scaling: Update the size of an ASG manually"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"dynamic-scaling-respond-to-changing-demand",children:"Dynamic Scaling: Respond to changing demand"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Simple / Step Scaling"}),"\n",(0,t.jsx)(n.li,{children:"When a CloudWatch alarm is triggered (example CPU > 70%), then add 2 units"}),"\n",(0,t.jsx)(n.li,{children:"When a CloudWatch alarm is triggered (example CPU < 30%), then remove I"}),"\n",(0,t.jsx)(n.li,{children:"Target Tracking Scaling"}),"\n",(0,t.jsx)(n.li,{children:"Example: I want the average ASG CPU to stay at around 40%"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"scheduled-scaling",children:"Scheduled Scaling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Anticipate a scaling based on known usage patterns"}),"\n",(0,t.jsx)(n.li,{children:"Example: increase the min. capacity to 10 at 5 pm on Fridays"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"predictive-scaling",children:"Predictive Scaling"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Uses Machine Learning to predict future traffic ahead of time"}),"\n",(0,t.jsx)(n.li,{children:"Automatically\nprovisions the right number of EC2\ninstances in advance"}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"elb--asg---summary",children:"ELB & ASG - Summary"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"High Availability vs Scalability (vertical and horizontal) vs Elasticity vs Agility in the Cloud"}),"\n",(0,t.jsx)(n.li,{children:"Elastic Load Balancers (ELB)"}),"\n",(0,t.jsx)(n.li,{children:"Distribute traffic across backend EC2 instances, can be Multi-AZ"}),"\n",(0,t.jsx)(n.li,{children:"Supports health checks"}),"\n",(0,t.jsx)(n.li,{children:"4 types: Classic (old), Application (HTTP - L7), Network (TCP - L4), Gateway (L3)"}),"\n",(0,t.jsx)(n.li,{children:"Auto Scaling Groups (ASG)"}),"\n",(0,t.jsx)(n.li,{children:"Implement Elasticity for your application, across multiple AZ"}),"\n",(0,t.jsx)(n.li,{children:"Scale EC2 instances based on the demand on your system, replace unhealthy"}),"\n",(0,t.jsx)(n.li,{children:"Integrated with the ELB"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},7233:(e,n,i)=>{i.d(n,{A:()=>a});const a=i.p+"assets/images/ASG-e224d41f396df47e7d75bb5a27ff3fab.png"},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var a=i(6540);const t={},l=a.createContext(t);function s(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);